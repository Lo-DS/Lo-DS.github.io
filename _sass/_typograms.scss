/* vietnamese */
@font-face {
  font-family: 'Inconsolata';
  font-style: normal;
  font-weight: 400;
  font-stretch: 100%;
  src: url(https://fonts.gstatic.com/s/inconsolata/v32/QldgNThLqRwH-OJ1UHjlKENVzkWGVkL3GZQmAwLYxYWI2qfdm7Lpp4U8WRL2l2eY.woff2) format('woff2');
  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB;
}
/* latin-ext */
@font-face {
  font-family: 'Inconsolata';
  font-style: normal;
  font-weight: 400;
  font-stretch: 100%;
  src: url(https://fonts.gstatic.com/s/inconsolata/v32/QldgNThLqRwH-OJ1UHjlKENVzkWGVkL3GZQmAwLYxYWI2qfdm7Lpp4U8WRP2l2eY.woff2) format('woff2');
  unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Inconsolata';
  font-style: normal;
  font-weight: 400;
  font-stretch: 100%;
  src: url(https://fonts.gstatic.com/s/inconsolata/v32/QldgNThLqRwH-OJ1UHjlKENVzkWGVkL3GZQmAwLYxYWI2qfdm7Lpp4U8WR32lw.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}



.typogram {
  .diagram {
    display: block;
  }

  .diagram line,
  .diagram circle,
  .diagram rect {
    stroke: var(--global-text-color);
  }

  .diagram line {
    stroke-width: 2;
  }

  .diagram circle {
    r: 3.5;
  }

  .diagram rect {
    width: 6px;
    height: 6px;
  }

  .diagram text,
  .glyph,
  .debug text {
    /** font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; **/
    font-family:
      'Inconsolata',
      monospace;
    font-size: 3em;
    text-anchor: middle;
    alignment-baseline: central;
    white-space: pre;
    fill: var(--global-text-color);
  }

  .reserved {
    fill: transparent;
    white-space: pre;
  }

  .debug[debug="true"] .reserved {
    fill: var(--global-text-color);
    opacity: 0.5;
  }

  .debug[debug="true"] line.grid {
    stroke: var(--global-text-color);
    stroke-width: 0.2;
    stroke-linecap: butt;
    fill: var(--global-text-color);
    opacity: 1%;
  }

  polygon {
    stroke-width: 0;
  }

  .debug[debug="true"] polygon.inner {
    fill: var(--global-text-color);
    stroke: var(--global-text-color);
    opacity: 5%;
  }

  polygon {
    stroke: var(--global-text-color);
    /** stroke-width: 0.2; **/
    stroke-linecap: butt;
    fill: var(--global-text-color);
  }

  .debug[debug="true"] polygon,
  .debug[debug="true"] line.grid {
    opacity: 10%;
  }

  .debug[debug="true"] polygon,
  .debug[debug="true"] path,
  .debug[debug="true"] circle {
    opacity: 50%;
  }

  .debug[debug="true"] polygon {
    fill: red;
    stroke: red;
  }

  /**
  circle {
    fill: var(--global-text-color);
  }
  **/

  .debug[debug="true"] circle,
  .debug[debug="true"] path {
    opacity: 50%;
    fill: red;
  }

  .debug[debug="true"] circle {
    stroke: red;
  }

  .debug[debug="true"] .inner {
    stroke-width: 0.2;
  }

  line.part {
    stroke-width: 6;
    stroke-linecap: butt;
    stroke: var(--global-text-color);
  }

  .debug[debug="true"] line.part {
    opacity: 50%;
    stroke: red;
  }

  .debug[debug="true"] line.center {
    stroke-width: 3;
    stroke-linecap: butt;
    opacity: 10%;
    stroke: var(--global-text-color);
  }

  text::selection {
    fill: HighlightText;
    background-color: Highlight;
  }
}
